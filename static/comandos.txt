npx sequelize init
npx sequelize db:create
npx sequelize model:create --name user --attributes name:string  (Name:string es lo que se poner para llenar la tabla de BD)

npx sequelize db:migrate (Agarra todo los modelos para que se migre y cree la tabla en la base de datos)

Iniciar postgres:
initdb -U postgres -A password -E utf8 -W -D "C:\Users\Rubenqc\Desktop\BD\DATA"
pg_ctl -D "C:\Users\Rubenqc\Desktop\BD\DATA" -l "C:\Users\Rubenqc\Desktop\BD\LOG\log.txt" start
psql -U postgres

Para crear, rellenar la base de datos y ejecutar el servidor: 
npx sequelize db:create
npx sequelize db:migrate
npx sequelize-cli db:seed:all
npm run dev

PASOS A HACER INICIAR SERVIDOR, NPM INSTALL AMBOS , npx sequelize db:create
npx sequelize db:migrate npx sequelize-cli db:seed:all

\l  
\dn   -- Lista los esquemas
\dt   -- Lista las tablas en el esquema actual

ctrl + D salgo de pgsql

///////////////////////////////////////////////////////////////////////////////////////////////////////////
AGREGAR DATA A LA TABLA:
curl -X POST -H "Content-Type:application/json" -d @data.json http://localhost:xxxx/api/****/insertaBD

CARGAR DATA JSON:
\COPY temp(data) FROM 'C:\"ruta"\archivo.json';

INSERTAR DATA.JSON A LA TABLA:
INSERT INTO xxxx SELECT (data->>'id')::integer ,data->>'xxxx',data->>'attribute1',data->>'attribute2',data->>'attributeX',CURRENT_TIMESTAMP,CURRENT_TIMESTAMP FROM temp;

///////////////////////////////////////////////////////////////////////////////////////////////////////////
ASSOCIATIONS:

1. crear migrates
npxm sequelize migration:generate --name add-1-association
npxm sequelize migration:generate --name add-2-association

2. cargar data csv
copy 1(id,att2) from 'C:\"ruta"\1.csv' DELIMITTER ';' CSV HEADER;
copy 2(id,att2,att3,att4) from 'C:\"ruta"\2.csv' DELIMITTER ';' CSV HEADER;

3. mostrar data
curl -X GET -H "Content-Type:application/json" http://localhost:xxxx/api/****/d1
(se debe crear las relaciones previante en 'models')

select * from "tabla" where id = 35
SELECT  *  FROM  "TABLA" WHERE nombres = 'Ricardo';